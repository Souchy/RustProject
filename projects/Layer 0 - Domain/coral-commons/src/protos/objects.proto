syntax = "proto3";

package objects;

// Lobbies are stored in Redis
message Lobby {
	int64 id = 1;
	int32 queue = 2;
	LobbyState state = 3; // idle, in queue, in game 
	repeated int64 players = 4;
	int32 queueStartTime = 5;
	
	enum LobbyState {
		LOBBY_STATE_IDLE = 0;
		LOBBY_STATE_IN_QUEUE = 1;
		LOBBY_STATE_IN_PREGAME = 2;
	}
}

// Players are in Redis
message Player {
	int64 id = 1;
	PlayerState state = 2; // idle, in queue, in game 
	int64 lobby = 3;
	// int32 queue = 3;
	int32 mmr = 4; //
	// int32 queueStartTime = 4;
	repeated int64 recentMatches = 5; // map of recent players <playerId, intGameAgo> 
	int64 geolocalisation = 6;

	enum PlayerState {
		PLAYER_STATE_IDLE = 0;
		PLAYER_STATE_IN_LOBBY = 1;
		PLAYER_STATE_IN_QUEUE = 2; // State = Queue IDs start from here. Must match.
		PLAYER_STATE_IN_PREGAME = 3;
		PLAYER_STATE_IN_GAME = 4;
	}
}

// Users are stored in a long-lasting DB like Mongo, etc
message User {
	int64 id = 1;
	string name = 2;
	string email = 3;
}
